version: "3.8"

services:
  nifi:
    build:
      context: ./nifi  # Ruta donde está tu Dockerfile y scripts
    container_name: nifi_dp
    restart: always
    ports:
      - "8443:8443"
    volumes:
      - ./data:/tmp/data  # Montar datos locales en el contenedor
      - ./nifi/nifi.properties:/opt/nifi/nifi-current/conf/nifi.properties  # Archivos de configuración
      - ./nifi/templates:/opt/nifi/templates  # Template XML
    environment:
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=ctsBtRBKHRAx69EqUghvvgEvjnaLjFEB
    networks:
      - postgres
    depends_on:
      - postgres  # NiFi depende de PostgreSQL para iniciar
    command: ["/init-nifi.sh"]  # Aquí especificas el script de inicio

  postgres:
    container_name: postgres_dp
    image: postgis/postgis:12-3.3
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-Welcome01}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_dp
    image: dpage/pgadmin4:4.16
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  streamlit:
    container_name: streamlit_dp
    image: python:3.9-slim
    working_dir: /app
    volumes:
      - ./streamlit_app:/app  # Monta el directorio local donde está tu script
    command: >
      sh -c "pip install -r requirements.txt && streamlit run app.py"
    environment:
      - STREAMLIT_PORT=8501
    ports:
      - "8501:8501"
    networks:
      - postgres
    depends_on:
      - postgres

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  data:
